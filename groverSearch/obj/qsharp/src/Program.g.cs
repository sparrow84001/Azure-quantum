//------------------------------------------------------------------------------
// <auto-generated>                                                             
//     This code was generated by a tool.                                       
//     Changes to this file may cause incorrect behavior and will be lost if    
//     the code is regenerated.                                                 
// </auto-generated>                                                            
//------------------------------------------------------------------------------
#pragma warning disable 436
#pragma warning disable 162
#pragma warning disable 1591
using System;
using Microsoft.Quantum.Core;
using Microsoft.Quantum.Intrinsic;
using Microsoft.Quantum.Simulation.Core;

[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"groverSearch\",\"Name\":\"SearchForMissingDigit\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Core\",\"Name\":\"EntryPoint\",\"Range\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":2},\"Item2\":{\"Line\":1,\"Column\":12}}]}}]},\"TypeIdRange\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":2},\"Item2\":{\"Line\":1,\"Column\":12}}]},\"Argument\":{\"Item1\":{\"Case\":\"UnitValue\"},\"Item2\":[],\"Item3\":{\"Case\":\"UnitType\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":12},\"Item2\":{\"Line\":1,\"Column\":14}}]}},\"Offset\":{\"Item1\":155,\"Item2\":4},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\azure quantum\\\\groverSearch\\\\Program.qs\",\"Position\":{\"Item1\":156,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":32}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"UnitType\"},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"groverSearch\",\"Name\":\"SearchForMissingDigit\"},\"Attributes\":[],\"SourceFile\":\"D:\\\\azure quantum\\\\groverSearch\\\\Program.qs\",\"Position\":{\"Item1\":156,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":32}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"groverSearch\",\"Name\":\"ComputeIsbnCheck\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\azure quantum\\\\groverSearch\\\\Program.qs\",\"Position\":{\"Item1\":202,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":27}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"constants\"]},\"Type\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Int\"},{\"Case\":\"Int\"}]]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":28},\"Item2\":{\"Line\":1,\"Column\":37}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"digitReg\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":52},\"Item2\":{\"Line\":1,\"Column\":60}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"targetReg\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":72},\"Item2\":{\"Line\":1,\"Column\":81}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Int\"},{\"Case\":\"Int\"}]]},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]}]]},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"groverSearch\",\"Name\":\"ComputeIsbnCheck\"},\"Attributes\":[],\"SourceFile\":\"D:\\\\azure quantum\\\\groverSearch\\\\Program.qs\",\"Position\":{\"Item1\":202,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":27}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsAdjoint\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"groverSearch\",\"Name\":\"ComputeIsbnCheck\"},\"Attributes\":[],\"SourceFile\":\"D:\\\\azure quantum\\\\groverSearch\\\\Program.qs\",\"Position\":{\"Item1\":202,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":103},\"Item2\":{\"Line\":1,\"Column\":112}},\"Documentation\":[\"automatically generated QsAdjoint specialization for groverSearch.ComputeIsbnCheck\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsControlled\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"groverSearch\",\"Name\":\"ComputeIsbnCheck\"},\"Attributes\":[],\"SourceFile\":\"D:\\\\azure quantum\\\\groverSearch\\\\Program.qs\",\"Position\":{\"Item1\":202,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":103},\"Item2\":{\"Line\":1,\"Column\":112}},\"Documentation\":[\"automatically generated QsControlled specialization for groverSearch.ComputeIsbnCheck\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsControlledAdjoint\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"groverSearch\",\"Name\":\"ComputeIsbnCheck\"},\"Attributes\":[],\"SourceFile\":\"D:\\\\azure quantum\\\\groverSearch\\\\Program.qs\",\"Position\":{\"Item1\":202,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":103},\"Item2\":{\"Line\":1,\"Column\":112}},\"Documentation\":[\"automatically generated QsControlledAdjoint specialization for groverSearch.ComputeIsbnCheck\"]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"groverSearch\",\"Name\":\"IsbnOracle\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\azure quantum\\\\groverSearch\\\\Program.qs\",\"Position\":{\"Item1\":209,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":21}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"constants\"]},\"Type\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Int\"},{\"Case\":\"Int\"}]]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":22},\"Item2\":{\"Line\":1,\"Column\":31}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"digitReg\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":46},\"Item2\":{\"Line\":1,\"Column\":54}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Int\"},{\"Case\":\"Int\"}]]},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]}]]},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"groverSearch\",\"Name\":\"IsbnOracle\"},\"Attributes\":[],\"SourceFile\":\"D:\\\\azure quantum\\\\groverSearch\\\\Program.qs\",\"Position\":{\"Item1\":209,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":21}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsAdjoint\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"groverSearch\",\"Name\":\"IsbnOracle\"},\"Attributes\":[],\"SourceFile\":\"D:\\\\azure quantum\\\\groverSearch\\\\Program.qs\",\"Position\":{\"Item1\":209,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":76},\"Item2\":{\"Line\":1,\"Column\":85}},\"Documentation\":[\"automatically generated QsAdjoint specialization for groverSearch.IsbnOracle\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsControlled\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"groverSearch\",\"Name\":\"IsbnOracle\"},\"Attributes\":[],\"SourceFile\":\"D:\\\\azure quantum\\\\groverSearch\\\\Program.qs\",\"Position\":{\"Item1\":209,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":76},\"Item2\":{\"Line\":1,\"Column\":85}},\"Documentation\":[\"automatically generated QsControlled specialization for groverSearch.IsbnOracle\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsControlledAdjoint\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"groverSearch\",\"Name\":\"IsbnOracle\"},\"Attributes\":[],\"SourceFile\":\"D:\\\\azure quantum\\\\groverSearch\\\\Program.qs\",\"Position\":{\"Item1\":209,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":76},\"Item2\":{\"Line\":1,\"Column\":85}},\"Documentation\":[\"automatically generated QsControlledAdjoint specialization for groverSearch.IsbnOracle\"]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Function\"},\"QualifiedName\":{\"Namespace\":\"groverSearch\",\"Name\":\"GetIsbnCheckConstants\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\azure quantum\\\\groverSearch\\\\Program.qs\",\"Position\":{\"Item1\":221,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":10},\"Item2\":{\"Line\":1,\"Column\":31}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"digits\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Int\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":32},\"Item2\":{\"Line\":1,\"Column\":38}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Int\"}]},\"ReturnType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Int\"},{\"Case\":\"Int\"}]]},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"groverSearch\",\"Name\":\"GetIsbnCheckConstants\"},\"Attributes\":[],\"SourceFile\":\"D:\\\\azure quantum\\\\groverSearch\\\\Program.qs\",\"Position\":{\"Item1\":221,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":10},\"Item2\":{\"Line\":1,\"Column\":31}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Function\"},\"QualifiedName\":{\"Namespace\":\"groverSearch\",\"Name\":\"NIterations\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\azure quantum\\\\groverSearch\\\\Program.qs\",\"Position\":{\"Item1\":237,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":10},\"Item2\":{\"Line\":1,\"Column\":21}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"nItems\"]},\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":22},\"Item2\":{\"Line\":1,\"Column\":28}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"Int\"},\"ReturnType\":{\"Case\":\"Int\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"groverSearch\",\"Name\":\"NIterations\"},\"Attributes\":[],\"SourceFile\":\"D:\\\\azure quantum\\\\groverSearch\\\\Program.qs\",\"Position\":{\"Item1\":237,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":10},\"Item2\":{\"Line\":1,\"Column\":21}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"groverSearch\",\"Name\":\"PrepareUniformSuperpositionOverDigits\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\azure quantum\\\\groverSearch\\\\Program.qs\",\"Position\":{\"Item1\":244,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":48}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"digitReg\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":49},\"Item2\":{\"Line\":1,\"Column\":57}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"groverSearch\",\"Name\":\"PrepareUniformSuperpositionOverDigits\"},\"Attributes\":[],\"SourceFile\":\"D:\\\\azure quantum\\\\groverSearch\\\\Program.qs\",\"Position\":{\"Item1\":244,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":48}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsAdjoint\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"groverSearch\",\"Name\":\"PrepareUniformSuperpositionOverDigits\"},\"Attributes\":[],\"SourceFile\":\"D:\\\\azure quantum\\\\groverSearch\\\\Program.qs\",\"Position\":{\"Item1\":244,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":79},\"Item2\":{\"Line\":1,\"Column\":88}},\"Documentation\":[\"automatically generated QsAdjoint specialization for groverSearch.PrepareUniformSuperpositionOverDigits\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsControlled\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"groverSearch\",\"Name\":\"PrepareUniformSuperpositionOverDigits\"},\"Attributes\":[],\"SourceFile\":\"D:\\\\azure quantum\\\\groverSearch\\\\Program.qs\",\"Position\":{\"Item1\":244,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":79},\"Item2\":{\"Line\":1,\"Column\":88}},\"Documentation\":[\"automatically generated QsControlled specialization for groverSearch.PrepareUniformSuperpositionOverDigits\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsControlledAdjoint\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"groverSearch\",\"Name\":\"PrepareUniformSuperpositionOverDigits\"},\"Attributes\":[],\"SourceFile\":\"D:\\\\azure quantum\\\\groverSearch\\\\Program.qs\",\"Position\":{\"Item1\":244,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":79},\"Item2\":{\"Line\":1,\"Column\":88}},\"Documentation\":[\"automatically generated QsControlledAdjoint specialization for groverSearch.PrepareUniformSuperpositionOverDigits\"]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"groverSearch\",\"Name\":\"ReflectAboutUniform\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\azure quantum\\\\groverSearch\\\\Program.qs\",\"Position\":{\"Item1\":249,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":30}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"digitReg\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":31},\"Item2\":{\"Line\":1,\"Column\":39}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"groverSearch\",\"Name\":\"ReflectAboutUniform\"},\"Attributes\":[],\"SourceFile\":\"D:\\\\azure quantum\\\\groverSearch\\\\Program.qs\",\"Position\":{\"Item1\":249,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":30}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Function\"},\"QualifiedName\":{\"Namespace\":\"groverSearch\",\"Name\":\"IsIsbnValid\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\azure quantum\\\\groverSearch\\\\Program.qs\",\"Position\":{\"Item1\":259,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":10},\"Item2\":{\"Line\":1,\"Column\":21}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"digits\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Int\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":22},\"Item2\":{\"Line\":1,\"Column\":28}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Int\"}]},\"ReturnType\":{\"Case\":\"Bool\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"groverSearch\",\"Name\":\"IsIsbnValid\"},\"Attributes\":[],\"SourceFile\":\"D:\\\\azure quantum\\\\groverSearch\\\\Program.qs\",\"Position\":{\"Item1\":259,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":10},\"Item2\":{\"Line\":1,\"Column\":21}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Function\"},\"QualifiedName\":{\"Namespace\":\"groverSearch\",\"Name\":\"MakeResultIsbn\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\azure quantum\\\\groverSearch\\\\Program.qs\",\"Position\":{\"Item1\":269,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":10},\"Item2\":{\"Line\":1,\"Column\":24}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"missingDigit\"]},\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":25},\"Item2\":{\"Line\":1,\"Column\":37}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"inputISBN\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Int\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":45},\"Item2\":{\"Line\":1,\"Column\":54}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Int\"},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Int\"}]}]]},\"ReturnType\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Int\"}]},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"groverSearch\",\"Name\":\"MakeResultIsbn\"},\"Attributes\":[],\"SourceFile\":\"D:\\\\azure quantum\\\\groverSearch\\\\Program.qs\",\"Position\":{\"Item1\":269,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":10},\"Item2\":{\"Line\":1,\"Column\":24}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"groverSearch\",\"Name\":\"RunGroversSearch\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\azure quantum\\\\groverSearch\\\\Program.qs\",\"Position\":{\"Item1\":283,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":27}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"register\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":28},\"Item2\":{\"Line\":1,\"Column\":36}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"phaseOracle\"]},\"Type\":{\"Case\":\"Operation\",\"Fields\":[{\"Item1\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},\"Item2\":{\"Case\":\"UnitType\"}},{\"Characteristics\":{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":48},\"Item2\":{\"Line\":1,\"Column\":59}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"iterations\"]},\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":90},\"Item2\":{\"Line\":1,\"Column\":100}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},{\"Case\":\"Operation\",\"Fields\":[{\"Item1\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},\"Item2\":{\"Case\":\"UnitType\"}},{\"Characteristics\":{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}]},{\"Case\":\"Int\"}]]},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"groverSearch\",\"Name\":\"RunGroversSearch\"},\"Attributes\":[],\"SourceFile\":\"D:\\\\azure quantum\\\\groverSearch\\\\Program.qs\",\"Position\":{\"Item1\":283,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":27}},\"Documentation\":[]}")]
#line hidden
namespace groverSearch
{
    [SourceLocation("D:\\azure quantum\\groverSearch\\Program.qs", OperationFunctor.Body, 157, 203)]
    public partial class SearchForMissingDigit : Operation<QVoid, QVoid>, ICallable
    {
        public SearchForMissingDigit(IOperationFactory m) : base(m)
        {
        }

        String ICallable.Name => "SearchForMissingDigit";
        String ICallable.FullName => "groverSearch.SearchForMissingDigit";
        public static EntryPointInfo<QVoid, QVoid> Info => new EntryPointInfo<QVoid, QVoid>(typeof(SearchForMissingDigit));
        protected ICallable<IQArray<Int64>, (Int64,Int64)> GetIsbnCheckConstants__
        {
            get;
            set;
        }

        protected ICallable<String, QVoid> Message__
        {
            get;
            set;
        }

        protected ICallable<Int64, Int64> NIterations__
        {
            get;
            set;
        }

        protected IUnitary<((Int64,Int64),IQArray<Qubit>)> IsbnOracle__
        {
            get;
            set;
        }

        protected Allocate Allocate__
        {
            get;
            set;
        }

        protected Release Release__
        {
            get;
            set;
        }

        protected ICallable<(IQArray<Qubit>,IAdjointable,Int64), QVoid> RunGroversSearch__
        {
            get;
            set;
        }

        protected ICallable Microsoft__Quantum__Diagnostics__DumpMachine
        {
            get;
            set;
        }

        protected ICallable<Microsoft.Quantum.Arithmetic.LittleEndian, Int64> Microsoft__Quantum__Arithmetic__MeasureInteger
        {
            get;
            set;
        }

        protected ICallable<IQArray<Qubit>, Microsoft.Quantum.Arithmetic.LittleEndian> Microsoft__Quantum__Arithmetic__LittleEndian
        {
            get;
            set;
        }

        protected ICallable<(Int64,IQArray<Int64>), IQArray<Int64>> MakeResultIsbn__
        {
            get;
            set;
        }

        protected ICallable<IQArray<Int64>, Boolean> IsIsbnValid__
        {
            get;
            set;
        }

        public override Func<QVoid, QVoid> __Body__ => (__in__) =>
        {
#line 160 "D:\\azure quantum\\groverSearch\\Program.qs"
            var inputISBN = (IQArray<Int64>)new QArray<Int64>(0L, 3L, 0L, 6L, -(1L), 0L, 6L, 1L, 5L, 2L);
#line 161 "D:\\azure quantum\\groverSearch\\Program.qs"
            var constants = GetIsbnCheckConstants__.Apply(inputISBN);
#line 162 "D:\\azure quantum\\groverSearch\\Program.qs"
            var (a,b) = constants;
#line 164 "D:\\azure quantum\\groverSearch\\Program.qs"
            Message__.Apply(String.Format("ISBN with missing digit: {0}", inputISBN));
#line 165 "D:\\azure quantum\\groverSearch\\Program.qs"
            Message__.Apply(String.Format("Oracle validates: ({0} + {1}x) mod 11 = 0 \n", b, a));
#line 168 "D:\\azure quantum\\groverSearch\\Program.qs"
            var numIterations = NIterations__.Apply(10L);
#line 171 "D:\\azure quantum\\groverSearch\\Program.qs"
            var phaseOracle = IsbnOracle__.Partial(new Func<IQArray<Qubit>, ((Int64,Int64),IQArray<Qubit>)>((__arg1__) => (constants, __arg1__)));
#line hidden
            {
#line 174 "D:\\azure quantum\\groverSearch\\Program.qs"
                var digitReg = Allocate__.Apply(4L);
#line hidden
                bool __arg2__ = true;
                try
                {
#line 175 "D:\\azure quantum\\groverSearch\\Program.qs"
                    var missingDigit = 0L;
#line 176 "D:\\azure quantum\\groverSearch\\Program.qs"
                    var resultISBN = QArray<Int64>.Create(10L);
#line 177 "D:\\azure quantum\\groverSearch\\Program.qs"
                    var attempts = 0L;
#line 180 "D:\\azure quantum\\groverSearch\\Program.qs"
                    while (true)
                    {
#line 181 "D:\\azure quantum\\groverSearch\\Program.qs"
                        RunGroversSearch__.Apply((digitReg, phaseOracle, numIterations));
#line 183 "D:\\azure quantum\\groverSearch\\Program.qs"
                        Microsoft__Quantum__Diagnostics__DumpMachine.Apply(QVoid.Instance);
#line 184 "D:\\azure quantum\\groverSearch\\Program.qs"
                        missingDigit = Microsoft__Quantum__Arithmetic__MeasureInteger.Apply(new Microsoft.Quantum.Arithmetic.LittleEndian(digitReg));
#line 185 "D:\\azure quantum\\groverSearch\\Program.qs"
                        resultISBN = new QArray<Int64>(MakeResultIsbn__.Apply((missingDigit, inputISBN)));
#line 187 "D:\\azure quantum\\groverSearch\\Program.qs"
                        attempts = (attempts + 1L);
                        if (IsIsbnValid__.Apply(resultISBN?.Copy()))
                        {
                            break;
                        }
                        else
                        {
                        }
                    }

#line 192 "D:\\azure quantum\\groverSearch\\Program.qs"
                    Message__.Apply(String.Format("Missing digit: {0}", missingDigit));
#line 193 "D:\\azure quantum\\groverSearch\\Program.qs"
                    Message__.Apply(String.Format("Full ISBN: {0}", resultISBN));
#line 194 "D:\\azure quantum\\groverSearch\\Program.qs"
                    if ((attempts == 1L))
                    {
#line 195 "D:\\azure quantum\\groverSearch\\Program.qs"
                        Message__.Apply(String.Format("The missing digit was found in {0} attempt.", attempts));
                    }
                    else
                    {
#line 198 "D:\\azure quantum\\groverSearch\\Program.qs"
                        Message__.Apply(String.Format("The missing digit was found in {0} attempts.", attempts));
                    }
                }
#line hidden
                catch
                {
                    __arg2__ = false;
                    throw;
                }
#line hidden
                finally
                {
                    if (__arg2__)
                    {
#line hidden
                        Release__.Apply(digitReg);
                    }
                }
            }

#line hidden
            return QVoid.Instance;
        }

        ;
        public override void __Init__()
        {
            this.GetIsbnCheckConstants__ = this.__Factory__.Get<ICallable<IQArray<Int64>, (Int64,Int64)>>(typeof(GetIsbnCheckConstants));
            this.Message__ = this.__Factory__.Get<ICallable<String, QVoid>>(typeof(global::Microsoft.Quantum.Intrinsic.Message));
            this.NIterations__ = this.__Factory__.Get<ICallable<Int64, Int64>>(typeof(NIterations));
            this.IsbnOracle__ = this.__Factory__.Get<IUnitary<((Int64,Int64),IQArray<Qubit>)>>(typeof(IsbnOracle));
            this.Allocate__ = this.__Factory__.Get<Allocate>(typeof(global::Microsoft.Quantum.Intrinsic.Allocate));
            this.Release__ = this.__Factory__.Get<Release>(typeof(global::Microsoft.Quantum.Intrinsic.Release));
            this.RunGroversSearch__ = this.__Factory__.Get<ICallable<(IQArray<Qubit>,IAdjointable,Int64), QVoid>>(typeof(RunGroversSearch));
            this.Microsoft__Quantum__Diagnostics__DumpMachine = this.__Factory__.Get<ICallable>(typeof(global::Microsoft.Quantum.Diagnostics.DumpMachine<>));
            this.Microsoft__Quantum__Arithmetic__MeasureInteger = this.__Factory__.Get<ICallable<Microsoft.Quantum.Arithmetic.LittleEndian, Int64>>(typeof(global::Microsoft.Quantum.Arithmetic.MeasureInteger));
            this.Microsoft__Quantum__Arithmetic__LittleEndian = this.__Factory__.Get<ICallable<IQArray<Qubit>, Microsoft.Quantum.Arithmetic.LittleEndian>>(typeof(global::Microsoft.Quantum.Arithmetic.LittleEndian));
            this.MakeResultIsbn__ = this.__Factory__.Get<ICallable<(Int64,IQArray<Int64>), IQArray<Int64>>>(typeof(MakeResultIsbn));
            this.IsIsbnValid__ = this.__Factory__.Get<ICallable<IQArray<Int64>, Boolean>>(typeof(IsIsbnValid));
        }

        public override IApplyData __DataIn__(QVoid data) => data;
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__)
        {
            return __m__.Run<SearchForMissingDigit, QVoid, QVoid>(QVoid.Instance);
        }
    }

    [SourceLocation("D:\\azure quantum\\groverSearch\\Program.qs", OperationFunctor.Body, 203, 210)]
    [SourceLocation("D:\\azure quantum\\groverSearch\\Program.qs", OperationFunctor.Adjoint, 203, 210)]
    [SourceLocation("D:\\azure quantum\\groverSearch\\Program.qs", OperationFunctor.Controlled, 203, 210)]
    [SourceLocation("D:\\azure quantum\\groverSearch\\Program.qs", OperationFunctor.ControlledAdjoint, 203, 210)]
    public partial class ComputeIsbnCheck : Unitary<((Int64,Int64),IQArray<Qubit>,IQArray<Qubit>)>, ICallable
    {
        public ComputeIsbnCheck(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<((Int64,Int64),IQArray<Qubit>,IQArray<Qubit>)>, IApplyData
        {
            public In(((Int64,Int64),IQArray<Qubit>,IQArray<Qubit>) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
            {
                get
                {
                    return Qubit.Concat(((IApplyData)Data.Item2)?.Qubits, ((IApplyData)Data.Item3)?.Qubits);
                }
            }
        }

        String ICallable.Name => "ComputeIsbnCheck";
        String ICallable.FullName => "groverSearch.ComputeIsbnCheck";
        protected IUnitary<(Int64,Microsoft.Quantum.Arithmetic.LittleEndian)> Microsoft__Quantum__Arithmetic__ApplyXorInPlace
        {
            get;
            set;
        }

        protected ICallable<IQArray<Qubit>, Microsoft.Quantum.Arithmetic.LittleEndian> Microsoft__Quantum__Arithmetic__LittleEndian
        {
            get;
            set;
        }

        protected IUnitary<(Int64,Int64,Microsoft.Quantum.Arithmetic.LittleEndian,Microsoft.Quantum.Arithmetic.LittleEndian)> Microsoft__Quantum__Arithmetic__MultiplyAndAddByModularInteger
        {
            get;
            set;
        }

        public override Func<((Int64,Int64),IQArray<Qubit>,IQArray<Qubit>), QVoid> __Body__ => (__in__) =>
        {
            var (constants,digitReg,targetReg) = __in__;
#line 204 "D:\\azure quantum\\groverSearch\\Program.qs"
            var (a,b) = constants;
#line 205 "D:\\azure quantum\\groverSearch\\Program.qs"
            Microsoft__Quantum__Arithmetic__ApplyXorInPlace.Apply((b, new Microsoft.Quantum.Arithmetic.LittleEndian(targetReg)));
#line 206 "D:\\azure quantum\\groverSearch\\Program.qs"
            Microsoft__Quantum__Arithmetic__MultiplyAndAddByModularInteger.Apply((a, 11L, new Microsoft.Quantum.Arithmetic.LittleEndian(digitReg), new Microsoft.Quantum.Arithmetic.LittleEndian(targetReg)));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<((Int64,Int64),IQArray<Qubit>,IQArray<Qubit>), QVoid> __AdjointBody__ => (__in__) =>
        {
            var (constants,digitReg,targetReg) = __in__;
#line 203 "D:\\azure quantum\\groverSearch\\Program.qs"
            var (__qsVar0__a__,__qsVar1__b__) = constants;
#line 203 "D:\\azure quantum\\groverSearch\\Program.qs"
            Microsoft__Quantum__Arithmetic__MultiplyAndAddByModularInteger.Adjoint.Apply((__qsVar0__a__, 11L, new Microsoft.Quantum.Arithmetic.LittleEndian(digitReg), new Microsoft.Quantum.Arithmetic.LittleEndian(targetReg)));
#line 203 "D:\\azure quantum\\groverSearch\\Program.qs"
            Microsoft__Quantum__Arithmetic__ApplyXorInPlace.Adjoint.Apply((__qsVar1__b__, new Microsoft.Quantum.Arithmetic.LittleEndian(targetReg)));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<(IQArray<Qubit>,((Int64,Int64),IQArray<Qubit>,IQArray<Qubit>)), QVoid> __ControlledBody__ => (__in__) =>
        {
            var (__controlQubits__,(constants,digitReg,targetReg)) = __in__;
#line 203 "D:\\azure quantum\\groverSearch\\Program.qs"
            var (a,b) = constants;
#line 203 "D:\\azure quantum\\groverSearch\\Program.qs"
            Microsoft__Quantum__Arithmetic__ApplyXorInPlace.Controlled.Apply((__controlQubits__, (b, new Microsoft.Quantum.Arithmetic.LittleEndian(targetReg))));
#line 203 "D:\\azure quantum\\groverSearch\\Program.qs"
            Microsoft__Quantum__Arithmetic__MultiplyAndAddByModularInteger.Controlled.Apply((__controlQubits__, (a, 11L, new Microsoft.Quantum.Arithmetic.LittleEndian(digitReg), new Microsoft.Quantum.Arithmetic.LittleEndian(targetReg))));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<(IQArray<Qubit>,((Int64,Int64),IQArray<Qubit>,IQArray<Qubit>)), QVoid> __ControlledAdjointBody__ => (__in__) =>
        {
            var (__controlQubits__,(constants,digitReg,targetReg)) = __in__;
#line 203 "D:\\azure quantum\\groverSearch\\Program.qs"
            var (__qsVar0__a__,__qsVar1__b__) = constants;
#line 203 "D:\\azure quantum\\groverSearch\\Program.qs"
            Microsoft__Quantum__Arithmetic__MultiplyAndAddByModularInteger.Adjoint.Controlled.Apply((__controlQubits__, (__qsVar0__a__, 11L, new Microsoft.Quantum.Arithmetic.LittleEndian(digitReg), new Microsoft.Quantum.Arithmetic.LittleEndian(targetReg))));
#line 203 "D:\\azure quantum\\groverSearch\\Program.qs"
            Microsoft__Quantum__Arithmetic__ApplyXorInPlace.Adjoint.Controlled.Apply((__controlQubits__, (__qsVar1__b__, new Microsoft.Quantum.Arithmetic.LittleEndian(targetReg))));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override void __Init__()
        {
            this.Microsoft__Quantum__Arithmetic__ApplyXorInPlace = this.__Factory__.Get<IUnitary<(Int64,Microsoft.Quantum.Arithmetic.LittleEndian)>>(typeof(global::Microsoft.Quantum.Arithmetic.ApplyXorInPlace));
            this.Microsoft__Quantum__Arithmetic__LittleEndian = this.__Factory__.Get<ICallable<IQArray<Qubit>, Microsoft.Quantum.Arithmetic.LittleEndian>>(typeof(global::Microsoft.Quantum.Arithmetic.LittleEndian));
            this.Microsoft__Quantum__Arithmetic__MultiplyAndAddByModularInteger = this.__Factory__.Get<IUnitary<(Int64,Int64,Microsoft.Quantum.Arithmetic.LittleEndian,Microsoft.Quantum.Arithmetic.LittleEndian)>>(typeof(global::Microsoft.Quantum.Arithmetic.MultiplyAndAddByModularInteger));
        }

        public override IApplyData __DataIn__(((Int64,Int64),IQArray<Qubit>,IQArray<Qubit>) data) => new In(data);
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__, (Int64,Int64) constants, IQArray<Qubit> digitReg, IQArray<Qubit> targetReg)
        {
            return __m__.Run<ComputeIsbnCheck, ((Int64,Int64),IQArray<Qubit>,IQArray<Qubit>), QVoid>((constants, digitReg, targetReg));
        }
    }

    [SourceLocation("D:\\azure quantum\\groverSearch\\Program.qs", OperationFunctor.Body, 210, 222)]
    [SourceLocation("D:\\azure quantum\\groverSearch\\Program.qs", OperationFunctor.Adjoint, 210, 222)]
    [SourceLocation("D:\\azure quantum\\groverSearch\\Program.qs", OperationFunctor.Controlled, 210, 222)]
    [SourceLocation("D:\\azure quantum\\groverSearch\\Program.qs", OperationFunctor.ControlledAdjoint, 210, 222)]
    public partial class IsbnOracle : Unitary<((Int64,Int64),IQArray<Qubit>)>, ICallable
    {
        public IsbnOracle(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<((Int64,Int64),IQArray<Qubit>)>, IApplyData
        {
            public In(((Int64,Int64),IQArray<Qubit>) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
            {
                get
                {
                    return ((IApplyData)Data.Item2)?.Qubits;
                }
            }
        }

        String ICallable.Name => "IsbnOracle";
        String ICallable.FullName => "groverSearch.IsbnOracle";
        protected Allocate Allocate__
        {
            get;
            set;
        }

        protected Release Release__
        {
            get;
            set;
        }

        protected ICallable Length__
        {
            get;
            set;
        }

        protected IUnitary<Qubit> Microsoft__Quantum__Intrinsic__X
        {
            get;
            set;
        }

        protected IUnitary<Qubit> Microsoft__Quantum__Intrinsic__H
        {
            get;
            set;
        }

        protected IUnitary<((Int64,Int64),IQArray<Qubit>,IQArray<Qubit>)> ComputeIsbnCheck__
        {
            get;
            set;
        }

        protected IUnitary Microsoft__Quantum__Canon__ApplyControlledOnInt
        {
            get;
            set;
        }

        public override Func<((Int64,Int64),IQArray<Qubit>), QVoid> __Body__ => (__in__) =>
        {
            var (constants,digitReg) = __in__;
#line hidden
            {
#line 211 "D:\\azure quantum\\groverSearch\\Program.qs"
                var (targetReg,flagQubit) = (Allocate__.Apply(digitReg.Length), Allocate__.Apply());
#line hidden
                bool __arg1__ = true;
                try
                {
#line 213 "D:\\azure quantum\\groverSearch\\Program.qs"
                    Microsoft__Quantum__Intrinsic__X.Apply(flagQubit);
#line 214 "D:\\azure quantum\\groverSearch\\Program.qs"
                    Microsoft__Quantum__Intrinsic__H.Apply(flagQubit);
#line 215 "D:\\azure quantum\\groverSearch\\Program.qs"
                    ComputeIsbnCheck__.Apply((constants, digitReg, targetReg));
#line 217 "D:\\azure quantum\\groverSearch\\Program.qs"
                    Microsoft__Quantum__Canon__ApplyControlledOnInt.Apply((0L, Microsoft__Quantum__Intrinsic__X, targetReg, flagQubit));
#line 210 "D:\\azure quantum\\groverSearch\\Program.qs"
                    ComputeIsbnCheck__.Adjoint.Apply((constants, digitReg, targetReg));
#line 210 "D:\\azure quantum\\groverSearch\\Program.qs"
                    Microsoft__Quantum__Intrinsic__H.Adjoint.Apply(flagQubit);
#line 210 "D:\\azure quantum\\groverSearch\\Program.qs"
                    Microsoft__Quantum__Intrinsic__X.Adjoint.Apply(flagQubit);
                }
#line hidden
                catch
                {
                    __arg1__ = false;
                    throw;
                }
#line hidden
                finally
                {
                    if (__arg1__)
                    {
#line hidden
                        Release__.Apply(targetReg);
#line hidden
                        Release__.Apply(flagQubit);
                    }
                }
            }

#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<((Int64,Int64),IQArray<Qubit>), QVoid> __AdjointBody__ => (__in__) =>
        {
            var (constants,digitReg) = __in__;
#line 210 "D:\\azure quantum\\groverSearch\\Program.qs"
            {
#line 210 "D:\\azure quantum\\groverSearch\\Program.qs"
                var (__qsVar0__targetReg__,__qsVar1__flagQubit__) = (Allocate__.Apply(digitReg.Length), Allocate__.Apply());
#line hidden
                bool __arg1__ = true;
                try
                {
#line 210 "D:\\azure quantum\\groverSearch\\Program.qs"
                    Microsoft__Quantum__Intrinsic__X.Apply(__qsVar1__flagQubit__);
#line 210 "D:\\azure quantum\\groverSearch\\Program.qs"
                    Microsoft__Quantum__Intrinsic__H.Apply(__qsVar1__flagQubit__);
#line 210 "D:\\azure quantum\\groverSearch\\Program.qs"
                    ComputeIsbnCheck__.Apply((constants, digitReg, __qsVar0__targetReg__));
#line 210 "D:\\azure quantum\\groverSearch\\Program.qs"
                    Microsoft__Quantum__Canon__ApplyControlledOnInt.Adjoint.Apply((0L, Microsoft__Quantum__Intrinsic__X, __qsVar0__targetReg__, __qsVar1__flagQubit__));
#line 210 "D:\\azure quantum\\groverSearch\\Program.qs"
                    ComputeIsbnCheck__.Adjoint.Apply((constants, digitReg, __qsVar0__targetReg__));
#line 210 "D:\\azure quantum\\groverSearch\\Program.qs"
                    Microsoft__Quantum__Intrinsic__H.Adjoint.Apply(__qsVar1__flagQubit__);
#line 210 "D:\\azure quantum\\groverSearch\\Program.qs"
                    Microsoft__Quantum__Intrinsic__X.Adjoint.Apply(__qsVar1__flagQubit__);
                }
#line hidden
                catch
                {
                    __arg1__ = false;
                    throw;
                }
#line hidden
                finally
                {
                    if (__arg1__)
                    {
#line hidden
                        Release__.Apply(__qsVar0__targetReg__);
#line hidden
                        Release__.Apply(__qsVar1__flagQubit__);
                    }
                }
            }

#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<(IQArray<Qubit>,((Int64,Int64),IQArray<Qubit>)), QVoid> __ControlledBody__ => (__in__) =>
        {
            var (__controlQubits__,(constants,digitReg)) = __in__;
#line 210 "D:\\azure quantum\\groverSearch\\Program.qs"
            {
#line 210 "D:\\azure quantum\\groverSearch\\Program.qs"
                var (targetReg,flagQubit) = (Allocate__.Apply(digitReg.Length), Allocate__.Apply());
#line hidden
                bool __arg1__ = true;
                try
                {
#line 210 "D:\\azure quantum\\groverSearch\\Program.qs"
                    Microsoft__Quantum__Intrinsic__X.Apply(flagQubit);
#line 210 "D:\\azure quantum\\groverSearch\\Program.qs"
                    Microsoft__Quantum__Intrinsic__H.Apply(flagQubit);
#line 210 "D:\\azure quantum\\groverSearch\\Program.qs"
                    ComputeIsbnCheck__.Apply((constants, digitReg, targetReg));
#line 210 "D:\\azure quantum\\groverSearch\\Program.qs"
                    Microsoft__Quantum__Canon__ApplyControlledOnInt.Controlled.Apply((__controlQubits__, (0L, Microsoft__Quantum__Intrinsic__X, targetReg, flagQubit)));
#line 210 "D:\\azure quantum\\groverSearch\\Program.qs"
                    ComputeIsbnCheck__.Adjoint.Apply((constants, digitReg, targetReg));
#line 210 "D:\\azure quantum\\groverSearch\\Program.qs"
                    Microsoft__Quantum__Intrinsic__H.Adjoint.Apply(flagQubit);
#line 210 "D:\\azure quantum\\groverSearch\\Program.qs"
                    Microsoft__Quantum__Intrinsic__X.Adjoint.Apply(flagQubit);
                }
#line hidden
                catch
                {
                    __arg1__ = false;
                    throw;
                }
#line hidden
                finally
                {
                    if (__arg1__)
                    {
#line hidden
                        Release__.Apply(targetReg);
#line hidden
                        Release__.Apply(flagQubit);
                    }
                }
            }

#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<(IQArray<Qubit>,((Int64,Int64),IQArray<Qubit>)), QVoid> __ControlledAdjointBody__ => (__in__) =>
        {
            var (__controlQubits__,(constants,digitReg)) = __in__;
#line 210 "D:\\azure quantum\\groverSearch\\Program.qs"
            {
#line 210 "D:\\azure quantum\\groverSearch\\Program.qs"
                var (__qsVar0__targetReg__,__qsVar1__flagQubit__) = (Allocate__.Apply(digitReg.Length), Allocate__.Apply());
#line hidden
                bool __arg1__ = true;
                try
                {
#line 210 "D:\\azure quantum\\groverSearch\\Program.qs"
                    Microsoft__Quantum__Intrinsic__X.Apply(__qsVar1__flagQubit__);
#line 210 "D:\\azure quantum\\groverSearch\\Program.qs"
                    Microsoft__Quantum__Intrinsic__H.Apply(__qsVar1__flagQubit__);
#line 210 "D:\\azure quantum\\groverSearch\\Program.qs"
                    ComputeIsbnCheck__.Apply((constants, digitReg, __qsVar0__targetReg__));
#line 210 "D:\\azure quantum\\groverSearch\\Program.qs"
                    Microsoft__Quantum__Canon__ApplyControlledOnInt.Adjoint.Controlled.Apply((__controlQubits__, (0L, Microsoft__Quantum__Intrinsic__X, __qsVar0__targetReg__, __qsVar1__flagQubit__)));
#line 210 "D:\\azure quantum\\groverSearch\\Program.qs"
                    ComputeIsbnCheck__.Adjoint.Apply((constants, digitReg, __qsVar0__targetReg__));
#line 210 "D:\\azure quantum\\groverSearch\\Program.qs"
                    Microsoft__Quantum__Intrinsic__H.Adjoint.Apply(__qsVar1__flagQubit__);
#line 210 "D:\\azure quantum\\groverSearch\\Program.qs"
                    Microsoft__Quantum__Intrinsic__X.Adjoint.Apply(__qsVar1__flagQubit__);
                }
#line hidden
                catch
                {
                    __arg1__ = false;
                    throw;
                }
#line hidden
                finally
                {
                    if (__arg1__)
                    {
#line hidden
                        Release__.Apply(__qsVar0__targetReg__);
#line hidden
                        Release__.Apply(__qsVar1__flagQubit__);
                    }
                }
            }

#line hidden
            return QVoid.Instance;
        }

        ;
        public override void __Init__()
        {
            this.Allocate__ = this.__Factory__.Get<Allocate>(typeof(global::Microsoft.Quantum.Intrinsic.Allocate));
            this.Release__ = this.__Factory__.Get<Release>(typeof(global::Microsoft.Quantum.Intrinsic.Release));
            this.Length__ = this.__Factory__.Get<ICallable>(typeof(global::Microsoft.Quantum.Core.Length<>));
            this.Microsoft__Quantum__Intrinsic__X = this.__Factory__.Get<IUnitary<Qubit>>(typeof(global::Microsoft.Quantum.Intrinsic.X));
            this.Microsoft__Quantum__Intrinsic__H = this.__Factory__.Get<IUnitary<Qubit>>(typeof(global::Microsoft.Quantum.Intrinsic.H));
            this.ComputeIsbnCheck__ = this.__Factory__.Get<IUnitary<((Int64,Int64),IQArray<Qubit>,IQArray<Qubit>)>>(typeof(ComputeIsbnCheck));
            this.Microsoft__Quantum__Canon__ApplyControlledOnInt = this.__Factory__.Get<IUnitary>(typeof(global::Microsoft.Quantum.Canon.ApplyControlledOnInt<>));
        }

        public override IApplyData __DataIn__(((Int64,Int64),IQArray<Qubit>) data) => new In(data);
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__, (Int64,Int64) constants, IQArray<Qubit> digitReg)
        {
            return __m__.Run<IsbnOracle, ((Int64,Int64),IQArray<Qubit>), QVoid>((constants, digitReg));
        }
    }

    [SourceLocation("D:\\azure quantum\\groverSearch\\Program.qs", OperationFunctor.Body, 222, 238)]
    public partial class GetIsbnCheckConstants : Function<IQArray<Int64>, (Int64,Int64)>, ICallable
    {
        public GetIsbnCheckConstants(IOperationFactory m) : base(m)
        {
        }

        public class Out : QTuple<(Int64,Int64)>, IApplyData
        {
            public Out((Int64,Int64) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits => null;
        }

        String ICallable.Name => "GetIsbnCheckConstants";
        String ICallable.FullName => "groverSearch.GetIsbnCheckConstants";
        protected ICallable<(Int64,Int64,String), QVoid> Microsoft__Quantum__Diagnostics__EqualityFactI
        {
            get;
            set;
        }

        protected ICallable Length__
        {
            get;
            set;
        }

        protected ICallable Microsoft__Quantum__Arrays__Enumerated
        {
            get;
            set;
        }

        public override Func<IQArray<Int64>, (Int64,Int64)> __Body__ => (__in__) =>
        {
            var digits = __in__;
#line 223 "D:\\azure quantum\\groverSearch\\Program.qs"
            Microsoft__Quantum__Diagnostics__EqualityFactI.Apply((digits.Length, 10L, "Expected a 10-digit number."));
#line 224 "D:\\azure quantum\\groverSearch\\Program.qs"
            var a = 0L;
#line 225 "D:\\azure quantum\\groverSearch\\Program.qs"
            var b = 0L;
#line 226 "D:\\azure quantum\\groverSearch\\Program.qs"
            foreach (var (idx,digit) in Microsoft__Quantum__Arrays__Enumerated.Apply<IQArray<(Int64,Int64)>>(digits))
#line hidden
            {
#line 227 "D:\\azure quantum\\groverSearch\\Program.qs"
                if ((digit < 0L))
                {
#line 228 "D:\\azure quantum\\groverSearch\\Program.qs"
                    a = (10L - idx);
                }
                else
                {
#line 231 "D:\\azure quantum\\groverSearch\\Program.qs"
                    b = (b + ((10L - idx) * digit));
                }
            }

#line 234 "D:\\azure quantum\\groverSearch\\Program.qs"
            return (a, (b % 11L));
        }

        ;
        public override void __Init__()
        {
            this.Microsoft__Quantum__Diagnostics__EqualityFactI = this.__Factory__.Get<ICallable<(Int64,Int64,String), QVoid>>(typeof(global::Microsoft.Quantum.Diagnostics.EqualityFactI));
            this.Length__ = this.__Factory__.Get<ICallable>(typeof(global::Microsoft.Quantum.Core.Length<>));
            this.Microsoft__Quantum__Arrays__Enumerated = this.__Factory__.Get<ICallable>(typeof(global::Microsoft.Quantum.Arrays.Enumerated<>));
        }

        public override IApplyData __DataIn__(IQArray<Int64> data) => data;
        public override IApplyData __DataOut__((Int64,Int64) data) => new Out(data);
        public static System.Threading.Tasks.Task<(Int64,Int64)> Run(IOperationFactory __m__, IQArray<Int64> digits)
        {
            return __m__.Run<GetIsbnCheckConstants, IQArray<Int64>, (Int64,Int64)>(digits);
        }
    }

    [SourceLocation("D:\\azure quantum\\groverSearch\\Program.qs", OperationFunctor.Body, 238, 245)]
    public partial class NIterations : Function<Int64, Int64>, ICallable
    {
        public NIterations(IOperationFactory m) : base(m)
        {
        }

        String ICallable.Name => "NIterations";
        String ICallable.FullName => "groverSearch.NIterations";
        protected ICallable<Double, Double> Microsoft__Quantum__Math__ArcSin
        {
            get;
            set;
        }

        protected ICallable<Double, Double> Microsoft__Quantum__Math__Sqrt
        {
            get;
            set;
        }

        protected ICallable<Int64, Double> Microsoft__Quantum__Convert__IntAsDouble
        {
            get;
            set;
        }

        protected ICallable<Double, Int64> Microsoft__Quantum__Math__Round
        {
            get;
            set;
        }

        protected ICallable<QVoid, Double> Microsoft__Quantum__Math__PI
        {
            get;
            set;
        }

        public override Func<Int64, Int64> __Body__ => (__in__) =>
        {
            var nItems = __in__;
#line 239 "D:\\azure quantum\\groverSearch\\Program.qs"
            var angle = Microsoft__Quantum__Math__ArcSin.Apply((1D / Microsoft__Quantum__Math__Sqrt.Apply(Microsoft__Quantum__Convert__IntAsDouble.Apply(nItems))));
#line 240 "D:\\azure quantum\\groverSearch\\Program.qs"
            var nIterations = Microsoft__Quantum__Math__Round.Apply((((0.25D * Microsoft__Quantum__Math__PI.Apply(QVoid.Instance)) / angle) - 0.5D));
#line 241 "D:\\azure quantum\\groverSearch\\Program.qs"
            return nIterations;
        }

        ;
        public override void __Init__()
        {
            this.Microsoft__Quantum__Math__ArcSin = this.__Factory__.Get<ICallable<Double, Double>>(typeof(global::Microsoft.Quantum.Math.ArcSin));
            this.Microsoft__Quantum__Math__Sqrt = this.__Factory__.Get<ICallable<Double, Double>>(typeof(global::Microsoft.Quantum.Math.Sqrt));
            this.Microsoft__Quantum__Convert__IntAsDouble = this.__Factory__.Get<ICallable<Int64, Double>>(typeof(global::Microsoft.Quantum.Convert.IntAsDouble));
            this.Microsoft__Quantum__Math__Round = this.__Factory__.Get<ICallable<Double, Int64>>(typeof(global::Microsoft.Quantum.Math.Round));
            this.Microsoft__Quantum__Math__PI = this.__Factory__.Get<ICallable<QVoid, Double>>(typeof(global::Microsoft.Quantum.Math.PI));
        }

        public override IApplyData __DataIn__(Int64 data) => new QTuple<Int64>(data);
        public override IApplyData __DataOut__(Int64 data) => new QTuple<Int64>(data);
        public static System.Threading.Tasks.Task<Int64> Run(IOperationFactory __m__, Int64 nItems)
        {
            return __m__.Run<NIterations, Int64, Int64>(nItems);
        }
    }

    [SourceLocation("D:\\azure quantum\\groverSearch\\Program.qs", OperationFunctor.Body, 245, 250)]
    [SourceLocation("D:\\azure quantum\\groverSearch\\Program.qs", OperationFunctor.Adjoint, 245, 250)]
    [SourceLocation("D:\\azure quantum\\groverSearch\\Program.qs", OperationFunctor.Controlled, 245, 250)]
    [SourceLocation("D:\\azure quantum\\groverSearch\\Program.qs", OperationFunctor.ControlledAdjoint, 245, 250)]
    public partial class PrepareUniformSuperpositionOverDigits : Unitary<IQArray<Qubit>>, ICallable
    {
        public PrepareUniformSuperpositionOverDigits(IOperationFactory m) : base(m)
        {
        }

        String ICallable.Name => "PrepareUniformSuperpositionOverDigits";
        String ICallable.FullName => "groverSearch.PrepareUniformSuperpositionOverDigits";
        protected IUnitary<(IQArray<Microsoft.Quantum.Math.ComplexPolar>,Microsoft.Quantum.Arithmetic.LittleEndian)> Microsoft__Quantum__Preparation__PrepareArbitraryStateCP
        {
            get;
            set;
        }

        protected ICallable Microsoft__Quantum__Arrays__ConstantArray
        {
            get;
            set;
        }

        protected ICallable<(Double,Double), Microsoft.Quantum.Math.ComplexPolar> Microsoft__Quantum__Math__ComplexPolar
        {
            get;
            set;
        }

        protected ICallable<IQArray<Qubit>, Microsoft.Quantum.Arithmetic.LittleEndian> Microsoft__Quantum__Arithmetic__LittleEndian
        {
            get;
            set;
        }

        public override Func<IQArray<Qubit>, QVoid> __Body__ => (__in__) =>
        {
            var digitReg = __in__;
#line 246 "D:\\azure quantum\\groverSearch\\Program.qs"
            Microsoft__Quantum__Preparation__PrepareArbitraryStateCP.Apply((Microsoft__Quantum__Arrays__ConstantArray.Apply<IQArray<Microsoft.Quantum.Math.ComplexPolar>>((10L, new Microsoft.Quantum.Math.ComplexPolar((1D, 0D)))), new Microsoft.Quantum.Arithmetic.LittleEndian(digitReg)));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<IQArray<Qubit>, QVoid> __AdjointBody__ => (__in__) =>
        {
            var digitReg = __in__;
#line 245 "D:\\azure quantum\\groverSearch\\Program.qs"
            Microsoft__Quantum__Preparation__PrepareArbitraryStateCP.Adjoint.Apply((Microsoft__Quantum__Arrays__ConstantArray.Apply<IQArray<Microsoft.Quantum.Math.ComplexPolar>>((10L, new Microsoft.Quantum.Math.ComplexPolar((1D, 0D)))), new Microsoft.Quantum.Arithmetic.LittleEndian(digitReg)));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<(IQArray<Qubit>,IQArray<Qubit>), QVoid> __ControlledBody__ => (__in__) =>
        {
            var (__controlQubits__,digitReg) = __in__;
#line 245 "D:\\azure quantum\\groverSearch\\Program.qs"
            Microsoft__Quantum__Preparation__PrepareArbitraryStateCP.Controlled.Apply((__controlQubits__, (Microsoft__Quantum__Arrays__ConstantArray.Apply<IQArray<Microsoft.Quantum.Math.ComplexPolar>>((10L, new Microsoft.Quantum.Math.ComplexPolar((1D, 0D)))), new Microsoft.Quantum.Arithmetic.LittleEndian(digitReg))));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<(IQArray<Qubit>,IQArray<Qubit>), QVoid> __ControlledAdjointBody__ => (__in__) =>
        {
            var (__controlQubits__,digitReg) = __in__;
#line 245 "D:\\azure quantum\\groverSearch\\Program.qs"
            Microsoft__Quantum__Preparation__PrepareArbitraryStateCP.Adjoint.Controlled.Apply((__controlQubits__, (Microsoft__Quantum__Arrays__ConstantArray.Apply<IQArray<Microsoft.Quantum.Math.ComplexPolar>>((10L, new Microsoft.Quantum.Math.ComplexPolar((1D, 0D)))), new Microsoft.Quantum.Arithmetic.LittleEndian(digitReg))));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override void __Init__()
        {
            this.Microsoft__Quantum__Preparation__PrepareArbitraryStateCP = this.__Factory__.Get<IUnitary<(IQArray<Microsoft.Quantum.Math.ComplexPolar>,Microsoft.Quantum.Arithmetic.LittleEndian)>>(typeof(global::Microsoft.Quantum.Preparation.PrepareArbitraryStateCP));
            this.Microsoft__Quantum__Arrays__ConstantArray = this.__Factory__.Get<ICallable>(typeof(global::Microsoft.Quantum.Arrays.ConstantArray<>));
            this.Microsoft__Quantum__Math__ComplexPolar = this.__Factory__.Get<ICallable<(Double,Double), Microsoft.Quantum.Math.ComplexPolar>>(typeof(global::Microsoft.Quantum.Math.ComplexPolar));
            this.Microsoft__Quantum__Arithmetic__LittleEndian = this.__Factory__.Get<ICallable<IQArray<Qubit>, Microsoft.Quantum.Arithmetic.LittleEndian>>(typeof(global::Microsoft.Quantum.Arithmetic.LittleEndian));
        }

        public override IApplyData __DataIn__(IQArray<Qubit> data) => data;
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__, IQArray<Qubit> digitReg)
        {
            return __m__.Run<PrepareUniformSuperpositionOverDigits, IQArray<Qubit>, QVoid>(digitReg);
        }
    }

    [SourceLocation("D:\\azure quantum\\groverSearch\\Program.qs", OperationFunctor.Body, 250, 260)]
    public partial class ReflectAboutUniform : Operation<IQArray<Qubit>, QVoid>, ICallable
    {
        public ReflectAboutUniform(IOperationFactory m) : base(m)
        {
        }

        String ICallable.Name => "ReflectAboutUniform";
        String ICallable.FullName => "groverSearch.ReflectAboutUniform";
        protected IUnitary<IQArray<Qubit>> PrepareUniformSuperpositionOverDigits__
        {
            get;
            set;
        }

        protected IUnitary Microsoft__Quantum__Canon__ApplyToEachCA
        {
            get;
            set;
        }

        protected IUnitary<Qubit> Microsoft__Quantum__Intrinsic__X
        {
            get;
            set;
        }

        protected IUnitary<Qubit> Microsoft__Quantum__Intrinsic__Z
        {
            get;
            set;
        }

        protected ICallable Microsoft__Quantum__Arrays__Most
        {
            get;
            set;
        }

        protected ICallable Microsoft__Quantum__Arrays__Tail
        {
            get;
            set;
        }

        public override Func<IQArray<Qubit>, QVoid> __Body__ => (__in__) =>
        {
            var digitReg = __in__;
#line 252 "D:\\azure quantum\\groverSearch\\Program.qs"
            PrepareUniformSuperpositionOverDigits__.Adjoint.Apply(digitReg);
#line 253 "D:\\azure quantum\\groverSearch\\Program.qs"
            Microsoft__Quantum__Canon__ApplyToEachCA.Apply((Microsoft__Quantum__Intrinsic__X, digitReg));
#line 255 "D:\\azure quantum\\groverSearch\\Program.qs"
            Microsoft__Quantum__Intrinsic__Z.Controlled.Apply((Microsoft__Quantum__Arrays__Most.Apply<IQArray<Qubit>>(digitReg), Microsoft__Quantum__Arrays__Tail.Apply<Qubit>(digitReg)));
#line 250 "D:\\azure quantum\\groverSearch\\Program.qs"
            Microsoft__Quantum__Canon__ApplyToEachCA.Adjoint.Apply((Microsoft__Quantum__Intrinsic__X, digitReg));
#line 250 "D:\\azure quantum\\groverSearch\\Program.qs"
            PrepareUniformSuperpositionOverDigits__.Adjoint.Adjoint.Apply(digitReg);
#line hidden
            return QVoid.Instance;
        }

        ;
        public override void __Init__()
        {
            this.PrepareUniformSuperpositionOverDigits__ = this.__Factory__.Get<IUnitary<IQArray<Qubit>>>(typeof(PrepareUniformSuperpositionOverDigits));
            this.Microsoft__Quantum__Canon__ApplyToEachCA = this.__Factory__.Get<IUnitary>(typeof(global::Microsoft.Quantum.Canon.ApplyToEachCA<>));
            this.Microsoft__Quantum__Intrinsic__X = this.__Factory__.Get<IUnitary<Qubit>>(typeof(global::Microsoft.Quantum.Intrinsic.X));
            this.Microsoft__Quantum__Intrinsic__Z = this.__Factory__.Get<IUnitary<Qubit>>(typeof(global::Microsoft.Quantum.Intrinsic.Z));
            this.Microsoft__Quantum__Arrays__Most = this.__Factory__.Get<ICallable>(typeof(global::Microsoft.Quantum.Arrays.Most<>));
            this.Microsoft__Quantum__Arrays__Tail = this.__Factory__.Get<ICallable>(typeof(global::Microsoft.Quantum.Arrays.Tail<>));
        }

        public override IApplyData __DataIn__(IQArray<Qubit> data) => data;
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__, IQArray<Qubit> digitReg)
        {
            return __m__.Run<ReflectAboutUniform, IQArray<Qubit>, QVoid>(digitReg);
        }
    }

    [SourceLocation("D:\\azure quantum\\groverSearch\\Program.qs", OperationFunctor.Body, 260, 270)]
    public partial class IsIsbnValid : Function<IQArray<Int64>, Boolean>, ICallable
    {
        public IsIsbnValid(IOperationFactory m) : base(m)
        {
        }

        String ICallable.Name => "IsIsbnValid";
        String ICallable.FullName => "groverSearch.IsIsbnValid";
        protected ICallable<(Int64,Int64,String), QVoid> Microsoft__Quantum__Diagnostics__EqualityFactI
        {
            get;
            set;
        }

        protected ICallable Length__
        {
            get;
            set;
        }

        protected ICallable Microsoft__Quantum__Arrays__Enumerated
        {
            get;
            set;
        }

        public override Func<IQArray<Int64>, Boolean> __Body__ => (__in__) =>
        {
            var digits = __in__;
#line 261 "D:\\azure quantum\\groverSearch\\Program.qs"
            Microsoft__Quantum__Diagnostics__EqualityFactI.Apply((digits.Length, 10L, "Expected a 10-digit number."));
#line 262 "D:\\azure quantum\\groverSearch\\Program.qs"
            var acc = 0L;
#line 263 "D:\\azure quantum\\groverSearch\\Program.qs"
            foreach (var (idx,digit) in Microsoft__Quantum__Arrays__Enumerated.Apply<IQArray<(Int64,Int64)>>(digits))
#line hidden
            {
#line 264 "D:\\azure quantum\\groverSearch\\Program.qs"
                acc = (acc + ((10L - idx) * digit));
            }

#line 266 "D:\\azure quantum\\groverSearch\\Program.qs"
            return ((acc % 11L) == 0L);
        }

        ;
        public override void __Init__()
        {
            this.Microsoft__Quantum__Diagnostics__EqualityFactI = this.__Factory__.Get<ICallable<(Int64,Int64,String), QVoid>>(typeof(global::Microsoft.Quantum.Diagnostics.EqualityFactI));
            this.Length__ = this.__Factory__.Get<ICallable>(typeof(global::Microsoft.Quantum.Core.Length<>));
            this.Microsoft__Quantum__Arrays__Enumerated = this.__Factory__.Get<ICallable>(typeof(global::Microsoft.Quantum.Arrays.Enumerated<>));
        }

        public override IApplyData __DataIn__(IQArray<Int64> data) => data;
        public override IApplyData __DataOut__(Boolean data) => new QTuple<Boolean>(data);
        public static System.Threading.Tasks.Task<Boolean> Run(IOperationFactory __m__, IQArray<Int64> digits)
        {
            return __m__.Run<IsIsbnValid, IQArray<Int64>, Boolean>(digits);
        }
    }

    [SourceLocation("D:\\azure quantum\\groverSearch\\Program.qs", OperationFunctor.Body, 270, 284)]
    public partial class MakeResultIsbn : Function<(Int64,IQArray<Int64>), IQArray<Int64>>, ICallable
    {
        public MakeResultIsbn(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(Int64,IQArray<Int64>)>, IApplyData
        {
            public In((Int64,IQArray<Int64>) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits => null;
        }

        String ICallable.Name => "MakeResultIsbn";
        String ICallable.FullName => "groverSearch.MakeResultIsbn";
        protected ICallable Length__
        {
            get;
            set;
        }

        public override Func<(Int64,IQArray<Int64>), IQArray<Int64>> __Body__ => (__in__) =>
        {
            var (missingDigit,inputISBN) = __in__;
#line 271 "D:\\azure quantum\\groverSearch\\Program.qs"
            var resultISBN = QArray<Int64>.Create(inputISBN.Length);
#line 272 "D:\\azure quantum\\groverSearch\\Program.qs"
            foreach (var i in new QRange(0L, (inputISBN.Length - 1L)))
#line hidden
            {
#line 273 "D:\\azure quantum\\groverSearch\\Program.qs"
                if ((inputISBN[i] < 0L))
                {
#line 274 "D:\\azure quantum\\groverSearch\\Program.qs"
                    resultISBN.Modify(i, missingDigit);
                }
                else
                {
#line 277 "D:\\azure quantum\\groverSearch\\Program.qs"
                    resultISBN.Modify(i, inputISBN[i]);
                }
            }

#line 280 "D:\\azure quantum\\groverSearch\\Program.qs"
            return resultISBN;
        }

        ;
        public override void __Init__()
        {
            this.Length__ = this.__Factory__.Get<ICallable>(typeof(global::Microsoft.Quantum.Core.Length<>));
        }

        public override IApplyData __DataIn__((Int64,IQArray<Int64>) data) => new In(data);
        public override IApplyData __DataOut__(IQArray<Int64> data) => data;
        public static System.Threading.Tasks.Task<IQArray<Int64>> Run(IOperationFactory __m__, Int64 missingDigit, IQArray<Int64> inputISBN)
        {
            return __m__.Run<MakeResultIsbn, (Int64,IQArray<Int64>), IQArray<Int64>>((missingDigit, inputISBN));
        }
    }

    [SourceLocation("D:\\azure quantum\\groverSearch\\Program.qs", OperationFunctor.Body, 284, -1)]
    public partial class RunGroversSearch : Operation<(IQArray<Qubit>,IAdjointable,Int64), QVoid>, ICallable
    {
        public RunGroversSearch(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(IQArray<Qubit>,IAdjointable,Int64)>, IApplyData
        {
            public In((IQArray<Qubit>,IAdjointable,Int64) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
            {
                get
                {
                    return Qubit.Concat(((IApplyData)Data.Item1)?.Qubits, ((IApplyData)Data.Item2)?.Qubits);
                }
            }
        }

        String ICallable.Name => "RunGroversSearch";
        String ICallable.FullName => "groverSearch.RunGroversSearch";
        protected IUnitary<IQArray<Qubit>> PrepareUniformSuperpositionOverDigits__
        {
            get;
            set;
        }

        protected ICallable<IQArray<Qubit>, QVoid> ReflectAboutUniform__
        {
            get;
            set;
        }

        public override Func<(IQArray<Qubit>,IAdjointable,Int64), QVoid> __Body__ => (__in__) =>
        {
            var (register,phaseOracle,iterations) = __in__;
#line 285 "D:\\azure quantum\\groverSearch\\Program.qs"
            PrepareUniformSuperpositionOverDigits__.Apply(register);
#line 286 "D:\\azure quantum\\groverSearch\\Program.qs"
            foreach (var __arg1__ in new QRange(1L, iterations))
#line hidden
            {
#line 287 "D:\\azure quantum\\groverSearch\\Program.qs"
                phaseOracle.Apply(register);
#line 288 "D:\\azure quantum\\groverSearch\\Program.qs"
                ReflectAboutUniform__.Apply(register);
            }

#line hidden
            return QVoid.Instance;
        }

        ;
        public override void __Init__()
        {
            this.PrepareUniformSuperpositionOverDigits__ = this.__Factory__.Get<IUnitary<IQArray<Qubit>>>(typeof(PrepareUniformSuperpositionOverDigits));
            this.ReflectAboutUniform__ = this.__Factory__.Get<ICallable<IQArray<Qubit>, QVoid>>(typeof(ReflectAboutUniform));
        }

        public override IApplyData __DataIn__((IQArray<Qubit>,IAdjointable,Int64) data) => new In(data);
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__, IQArray<Qubit> register, IAdjointable phaseOracle, Int64 iterations)
        {
            return __m__.Run<RunGroversSearch, (IQArray<Qubit>,IAdjointable,Int64), QVoid>((register, phaseOracle, iterations));
        }
    }
}